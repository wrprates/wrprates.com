---
title: "List of Unicorn Companies Analysis"
author: "Wlademir Ribeiro Prates"
date: "2022-07-29"
categories: [Reporting]
draft: true
---

The full and updated list of Unicorn companies used on this analysis can be found [here](https://www.cbinsights.com/research-unicorn-companies), at the CBInsights website.

## Reading Unicorn companies list

First, we need to load the used packages and read the data. Below I am showing the top 50 Unicorn companies, with all the variables from the raw data.

In this very beginning of the post some settings are already created, like the colors for Countries and Industries, to use in the whole document.

```{r}
#| warning: false
#| message: false

# Loading packages
library(dplyr)
library(echarts4r)
library(lubridate)
library(MetBrewer)
library(reactable)
library(readxl)

# Reading the Excel file
unicorn_data <- readxl::read_excel("unicorn_companies.xlsx", skip = 2) |>
  dplyr::arrange(dplyr::desc("Valuation ($B)")) |>
  dplyr::mutate(
    `Years as Unicorn` = round(
      (lubridate::interval(`Date Joined`, lubridate::today()) %/% months(1)) / 12,
      digits = 2
    ),
    `Number of Investors` = stringr::str_count(`Select Investors`, ',') + 1,
    `Industry` = as.factor(`Industry`),
    Quartiles = dplyr::case_when(
      `Valuation ($B)` <= quantile(`Valuation ($B)`, 0.25, na.rm = TRUE) ~ 'Q4',
      `Valuation ($B)` <= quantile(`Valuation ($B)`, 0.5, na.rm = TRUE) ~ 'Q3',
      `Valuation ($B)` <= quantile(`Valuation ($B)`, 0.75, na.rm = TRUE) ~ 'Q2',
      `Valuation ($B)` <= quantile(`Valuation ($B)`, 1, na.rm = TRUE) ~ 'Q1'
    )
  )

colors_industry <- dplyr::tibble(
  name = unique(unicorn_data$Industry),
  itemStyle = dplyr::tibble(
    color = as.character(
      MetBrewer::met.brewer(
        "Juarez",
        length(unique(unicorn_data$Industry))
      )
    )
  )
)

colors_country <- dplyr::tibble(
  name = unique(head(unicorn_data, 50)$Country),
  itemStyle = dplyr::tibble(
    color = as.character(
      MetBrewer::met.brewer(
        "Peru1",
        length(unique(head(unicorn_data, 50)$Country))
      )
    )
  )
)
```

After reading the data I have created two charts to briefly show the summarized data by Country and by Industry.

```{r}
unicorn_data |>
  dplyr::group_by(Country) |>
  dplyr::summarise(`Valuation ($B)` = sum(`Valuation ($B)`)) |>
  dplyr::arrange(dplyr::desc(`Valuation ($B)`)) |>
  head(5) |>
  dplyr::left_join(
    colors_country |> dplyr::rename(Country = name, color = `itemStyle`),
    by = "Country"
  ) |> 
  echarts4r::e_charts(`Valuation ($B)`) |>
  echarts4r::e_legend(show = FALSE) |>
  echarts4r::e_bar(Country) |>
  echarts4r::e_y_axis(type = "category") |>
  echarts4r::e_grid(containLabel = TRUE) |>
  echarts4r::e_tooltip() |>
  echarts4r::e_add_nested('itemStyle', color) |>
  echarts4r::e_title(text = "Unicorns by Country") 
```


```{r}
unicorn_data |>
  dplyr::group_by(Industry) |>
  dplyr::summarise(`Valuation ($B)` = sum(`Valuation ($B)`)) |>
  dplyr::arrange(dplyr::desc(`Valuation ($B)`)) |>
    dplyr::left_join(
      colors_industry |> dplyr::rename(Industry = name, color = `itemStyle`),
      by = "Industry"
    ) |>
  echarts4r::e_charts(`Valuation ($B)`) |>
  echarts4r::e_legend(show = FALSE) |>
  echarts4r::e_bar(Industry) |>
  echarts4r::e_y_axis(type = "category") |>
  echarts4r::e_grid(containLabel = TRUE) |>
  echarts4r::e_tooltip() |>
  echarts4r::e_add_nested('itemStyle', color) |>
  echarts4r::e_title(text = "Unicorns by Industry")
```


Interactive table with the first 50 Unicorn companies.

```{r}
interactive_table_data <- unicorn_data |>
  dplyr::select(-c("Date Joined", "Number of Investors", "Quartiles")) |>
  dplyr::mutate(`Years as Unicorn` = floor(`Years as Unicorn`)) |>
  head(50)

# Creating an interactive table
reactable::reactable(
  interactive_table_data,
  columns = list(
    `Select Investors` = colDef(minWidth = 180),
    Country = colDef(html = TRUE)
  ),
  style = list(fontSize = "0.70rem"),
  defaultPageSize = 5,
  searchable = TRUE,
  striped = TRUE,
  resizable = TRUE
)
```

## Exploring top 50 Unicorn companies

```{r}
treemap_tooltip <- htmlwidgets::JS(
      "function(info){
        var treePathInfo = info.treePathInfo;
        var treePath = [];
        for (var i = 1; i < treePathInfo.length; i++) {
          treePath.push(treePathInfo[i].name);
        }
      return(
        '<strong>' + echarts.format.encodeHTML(treePath.join(' / ')) + '</strong>' + '<br>' +
        'Valuation ($B): <i>' + info.value + '</i><br>'
      )}"
      )

unicorn_data |>
  dplyr::arrange(dplyr::desc(`Valuation ($B)`)) |>
  head(50) |>
  dplyr::select(Country, name = Company, value = `Valuation ($B)`) |>
  tidyr::nest(children = c("name", "value")) |>
  dplyr::mutate(value = purrr::map_dbl(children, ~ sum(.x$value))) |>
  dplyr::rename(name = Country) |>
  dplyr::left_join(colors_country, by = "name") |>
  echarts4r::e_charts() |>
  echarts4r::e_title(text = "Unicorns by Country") |>
  echarts4r::e_treemap(
    leafDepth = 2,
    itemStyle = list(normal = list(
      borderWidth = 0,
      gapWidth = 2,
      backgroundColor = "white"
    )),
    upperLabel = list(
      normal = list(
        show = TRUE,
        height = 30,
        formatter = "{b}",
        color = "black",
        fontSize = 12
      )
    )
  ) |>
  echarts4r::e_tooltip(
    backgroundColor = "rgba(255,255,255,0.8)",
    formatter = treemap_tooltip
  )
```

```{r}
unicorn_data |>
  dplyr::arrange(dplyr::desc(`Valuation ($B)`)) |>
  head(50) |>
  dplyr::select(Industry, name = Company, value = `Valuation ($B)`) |>
  tidyr::nest(children = c("name", "value")) |>
  dplyr::mutate(value = purrr::map_dbl(children, ~ sum(.x$value))) |>
  dplyr::rename(name = Industry) |>
  dplyr::left_join(colors_industry, by = "name") |>
  echarts4r::e_charts() |>
  echarts4r::e_title(text = "Unicorns by Industry") |>
  echarts4r::e_treemap(
    leafDepth = 2,
    itemStyle = list(normal = list(
      borderWidth = 0,
      gapWidth = 2,
      backgroundColor = "white"
    )),
    upperLabel = list(
      normal = list(
        show = TRUE,
        height = 30,
        formatter = "{b}",
        color = "black",
        fontSize = 12
      )
    )
  ) |>
  echarts4r::e_tooltip(
    backgroundColor = "rgba(255,255,255,0.8)",
    formatter = treemap_tooltip
  )
```

## Exploring all Unicorn companies with *treemaps*


```{r}
tree_map_chart <- function(data, quartile, colors_df, tooltip = treemap_tooltip) {
  filtered_data <- data |> dplyr::filter(Quartiles == quartile) 

  treemap_data <- filtered_data |>
    dplyr::arrange(dplyr::desc(`Valuation ($B)`)) |>
    dplyr::filter(Quartiles == quartile) |>
    dplyr::select(Industry, name = Company, value = `Valuation ($B)`) |>
    tidyr::nest(children = c("name", "value")) |>
    dplyr::mutate(value = purrr::map_dbl(children, ~ sum(.x$value))) |>
    dplyr::rename(name = Industry) |>
    dplyr::left_join(colors_df, by = "name")

  min_valuation <- min(filtered_data$`Valuation ($B)`)
  max_valuation <- max(filtered_data$`Valuation ($B)`)

  treemap_data |>
    echarts4r::e_charts() |>
    echarts4r::e_title(
      text = paste0("Unicorns by Industry - from $",  min_valuation, "B to $", max_valuation, "B", "(", quartile,")")
    ) |>
    echarts4r::e_treemap(
      leafDepth = 1,
      itemStyle = list(
        normal = list(
          borderWidth = 0,
          gapWidth = 2,
          backgroundColor = "white"
        )
      ),
      upperLabel = list(
        normal = list(
          show = FALSE,
          height = 30,
          formatter = "{b}",
          color = "black",
          fontSize = 12
        )
      )
    ) |>
    echarts4r::e_tooltip(
      backgroundColor = "rgba(255,255,255,0.8)",
      formatter = treemap_tooltip
    )
}

```

Treemaps with data split into quartiles.


```{r}
htmltools::div(
  tree_map_chart(data = unicorn_data, quartile = "Q1", colors_df = colors_industry),
  tree_map_chart(data = unicorn_data, quartile = "Q2", colors_df = colors_industry),
  tree_map_chart(data = unicorn_data, quartile = "Q3", colors_df = colors_industry),
  tree_map_chart(data = unicorn_data, quartile = "Q4", colors_df = colors_industry),
)


```


## Unicorn companies in Brazil (my country)

```{r}
unicorn_data |>
  dplyr::arrange(dplyr::desc(`Valuation ($B)`)) |>
  dplyr::filter(Country == "Brazil") |>
  dplyr::select(Country, name = Company, value = `Valuation ($B)`) |>
  tidyr::nest(children = c("name", "value")) |>
  dplyr::mutate(value = purrr::map_dbl(children, ~ sum(.x$value))) |>
  dplyr::rename(name = Country) |>
  dplyr::left_join(colors_country, by = "name") |>
  echarts4r::e_charts() |>
    echarts4r::e_title(text = "Unicorns in Brazil") |>
    echarts4r::e_treemap(
      leafDepth = 2,
      itemStyle = list(
        normal = list(
          borderWidth = 0,
          gapWidth = 2,
          backgroundColor = "white"
        )
      ),
      upperLabel = list(
        normal = list(
          show = TRUE,
          height = 30,
          formatter = "{b}",
          color = "black",
          fontSize = 12
        )
      )
    ) |>
    echarts4r::e_tooltip(
      backgroundColor = "rgba(255,255,255,0.8)",
      formatter = treemap_tooltip
    )
```

