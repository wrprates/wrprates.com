---
title: "How to Get Yearly Dividends for Any Stock with R?"
author: "Wlademir Ribeiro Prates"
date: "2023-10-09"
categories: [Reporting, Data Science, Machine Learning]
image: preview.png
format:
  html:
    include-after-body: disqus.html
---

```{r}
#| warning: false
#| message: false
#| echo: false
#| include: false


```


Investing in stocks is more than just looking at price appreciation. Dividends are a crucial part of the equation. Especially for investors who prioritize income generation, knowing the dividends a stock yields year-over-year can be invaluable. In this post, I'll guide you through a streamlined method using R to pull yearly dividend data for any stock. 

**Dividends** are payments made by corporations to their shareholders, often as a distribution of profits. When analyzing stocks from a long-term perspective, dividends can make a significant difference in the total returns an investor receives.

**In this blog post, you will discover**:

- How to pull yearly dividends data for stocks using R.
- Fetching the closing price of the stock at the end of each year.
- Calculating yearly yield based on dividends and the closing price.

**R tools and techniques covered here**:

- Leveraging the `quantmod` package to pull stock data.
- Employing the `dplyr` package for data wrangling.
- Using `purrr` for functional programming within R.


## Fetching Yearly Dividends

To get yearly dividends for a stock, we make use of the `quantmod` package which interfaces with various sources online to fetch stock data. Here's the code chunk to pull yearly dividends:


```{r}
library(quantmod)
library(dplyr)

get_yearly_dividends <- function(ticker, years) {
  historical_dividends <- quantmod::getDividends(
    Symbol = ticker,
    from = paste0(min(years), "-01-01"),
    to = paste0(max(years), "-12-31")
  ) |>
    setNames("dividends")
  
  yearly_data <- historical_dividends |>
    dplyr::as_tibble(rownames = "date") |>
    dplyr::mutate(
      ticker = gsub(".SA", "", ticker),
      year = lubridate::year(date)
    ) |>
    group_by(year) |>
    dplyr::summarise(
      dividends = sum(dividends)
    )
  
  return(yearly_data)
}
```


## Getting Yearly Closing Price

While dividends tell half the story, to evaluate the attractiveness of the dividends, we need to know at what price the stock closed at the end of each year. Here's how we can fetch that data:

```{r}
get_yearly_closing_price <- function(ticker, years) {
  historical_prices <- quantmod::getSymbols(
    Symbol = ticker,
    from = paste0(min(years), "-01-01"),
    to = paste0(max(years), "-12-31"),
    auto.assign = FALSE
  ) |>
    dplyr::as_tibble(rownames = "date") |>
    dplyr::select(date, tidyr::contains("Adjusted")) |>
    setNames(c("date", "price")) |>
    dplyr::mutate(
      ticker = gsub(".SA", "", ticker),
      year = lubridate::year(date)
    ) |>
    group_by(year) |>
    dplyr::summarise(
      price = last(price)
    )
  return(historical_prices)
}

```


## Calculating Yearly Yield

Combining the dividends and the closing price, we can calculate the yield for the stock year-over-year:

```{r}
get_yearly_yield <- function(ticker, years) {
  yearly_yields <- get_yearly_dividends(ticker, years) |>
    dplyr::left_join(
      get_yearly_closing_price(ticker, years),
      by = "year"
    ) |>
    dplyr::mutate(
      ticker = gsub(".SA", "", ticker),
      yield = round(100 * dividends / price, 4)
    )
  
  return(yearly_yields)
}

get_yearly_yield("TAEE11.SA", c(2020:2023))

```

## A Practical Example

Let's take a few tickers as an example and pull their yearly yields:

```{r}
library(purrr)
tickers <- c(
  "TAEE11",
  "TRPL4",
  "ALUP11",
  "RADL3"
)

dados <- purrr::map(
  paste0(tickers, ".SA"),
  get_yearly_yield,
  c(2015:2023)
) |> 
  setNames(tickers)

dados

```


Now, let's visualize the yearly dividend yield for these stocks:


```{r}
#| warning: false
#| message: false

# Loading necessary packages
library(echarts4r)
library(tidyr)

# Transforming the data for plotting
# "dados" means "data" in Portuguese, so let's call our data "stock_data"
stock_data <- dados |>
  bind_rows(.id = "ticker") |>
  mutate(year = as.factor(year))
  
stock_data |>
  group_by(ticker) |>
  e_charts(year) |>
  e_line(yield) |>
  e_y_axis(name = "Yield (%)") |>
  e_theme("wonderland") |> 
  e_tooltip(trigger = "axis") 
```

## Conclusion

Using R, we have streamlined the process of fetching and analyzing yearly dividend data for stocks. This method allows investors and analysts to quickly evaluate the attractiveness of dividends over the years. By understanding the yearly yields, one can make better-informed decisions regarding their investments. As always, ensure that dividends are just one part of your holistic analysis when evaluating stocks. Happy investing!
